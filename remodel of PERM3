import random

def playPERM3():
  make10Numbers = []
  while len(make10Numbers) <= 1:
    randomSelection = selectingFiveNumber()
    make10Numbers.append(randomSelection)
  firstPart = make10Numbers[0][5][0]
  secondPart = make10Numbers[1][5][0]
  aList = firstPart + secondPart
  surfForPERMS = perm3Random(aList)
  return surfForPERMS

def selectingFiveNumber():
  fiveNumbers = []
  previousWinningNumber = [19,15,4,8,3,12,26,2,9,16,7,25,17,18,5,13,27,1,40,64,20,35,32,23,29,14,44,31,51,21,34,6,30,28,49,54,61,71,38,39,47,36,56,55,33,62,37,50,52,65,67,78,68,46,48,59,41,60,66,84,72,77,57,53,74]
  while len(fiveNumbers) < 5:
    randomPicking = random.randrange(1,90)
    if randomPicking not in previousWinningNumber:
      if randomPicking not in fiveNumbers:
        fiveNumbers.append(randomPicking)
    else:
        pass
  deltaNumber = deltaAuthentication(fiveNumbers)
  relations = relationAuthentication(deltaNumber)  
  fiveNumbers.append(relations)
    
  return fiveNumbers

def deltaAuthentication(fiveNumbers):
  deltaSelection = []
  deltaCalculation = [] 
  
  sortRandomPick = sorted(fiveNumbers)
  deltaCalculation.append(sortRandomPick[0]) 
  deltaCalculation.append(sortRandomPick[1] - sortRandomPick[0]) 
  deltaCalculation.append(sortRandomPick[2] - sortRandomPick[1]) 
  deltaCalculation.append(sortRandomPick[3] - sortRandomPick[2]) 
  deltaCalculation.append(sortRandomPick[4] - sortRandomPick[3]) 
  
  if (sum(deltaCalculation) in range(28,92)) and (sum(sortRandomPick) in range(109,340)):
    deltaSelection.append(sortRandomPick)
  else:
    pass 
  return deltaSelection

def relationAuthentication(deltaNumber):

  a1 = deltaNumber[0][0]/(deltaNumber[0][0]+deltaNumber[0][1]) 
  a2 = deltaNumber[0][1]/(deltaNumber[0][0]+deltaNumber[0][1])

  a3 = deltaNumber[0][1]/(deltaNumber[0][1]+deltaNumber[0][2])
  a4 = deltaNumber[0][2]/(deltaNumber[0][1]+deltaNumber[0][2])

  a5 = deltaNumber[0][2]/(deltaNumber[0][2]+deltaNumber[0][3])
  a6 = deltaNumber[0][3]/(deltaNumber[0][2]+deltaNumber[0][3])

  a7 = deltaNumber[0][3]/(deltaNumber[0][3]+deltaNumber[0][4])
  a8 = deltaNumber[0][4]/(deltaNumber[0][3]+deltaNumber[0][4])

  sumTotal = a1 + a2 + a3 + a4  + a5 + a6 + a7 + a8
  if sumTotal != 4:
    pass
  else:
    return deltaNumber
  
def perm3Random(aList):
  thriceSelection = []
  while len(thriceSelection) < 1:
    randomPickingThree = random.sample(aList, k=3)
    thriceSelection.append(randomPickingThree)
  
  return thriceSelection

print(playPERM3())
